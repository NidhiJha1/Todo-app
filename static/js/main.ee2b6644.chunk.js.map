{"version":3,"sources":["components/to-do-list.png","components/Todo.js","App.js","index.js"],"names":["Todo","useState","inputData","setInputdata","localStorage","getItem","JSON","parse","items","setItems","toggleButton","setToggleButton","isEditItem","setIsEditItem","addItem","map","element","id","name","allInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","logo","alt","type","placeholder","value","onChange","event","target","onKeyPress","key","title","onClick","newEditItem","find","editItem","index","updateditems","filter","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAe,MAA0B,uC,OCwI1BA,EAxHF,WACT,MAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAZfG,aAAaC,QAAQ,YAIrBC,KAAKC,MAAMH,aAAaC,QAAQ,aAEhC,IAMX,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwCR,oBAAS,GAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAmCV,mBAAS,MAA5C,mBAAOW,EAAP,KAAkBC,EAAlB,KAMMC,EAAU,WACZ,GAAIZ,EAIC,GAAGA,IAAcQ,EACjBD,EACID,EAAMO,KAAI,SAACC,GACP,OAAGA,EAAQC,KAAOL,EACd,2BAAUI,GAAV,IAAmBE,KAAKhB,IAErBc,MAIXL,GAAgB,GAChBR,EAAa,IACbU,EAAc,UAEnB,CACA,IAAMM,EAAe,CAACF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAKhB,GAChEO,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBhB,EAAa,SApBfoB,MAAM,qBA6Db,OALCC,qBAAU,WACTpB,aAAaqB,QAAQ,WAAWnB,KAAKoB,UAAUlB,MAC9C,CAACA,IAIF,mCACE,qBAAKmB,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACG,mCACE,qBAAKC,IAAKC,EAAMC,IAAI,cACjB,+DAEL,sBAAKH,UAAU,WAAf,UACI,uBACCI,KAAK,OACLC,YAAY,YACZd,KAAK,WACLe,MAAO/B,EACPgC,SAjFc,SAACC,GACtBhC,EAAagC,EAAMC,OAAOH,QAiFnBI,WAzCc,SAACF,GACP,UAAdA,EAAMG,KACLxB,OA0CIJ,EAAe,mBAAGiB,UAAU,qBAAqBY,MAAM,WAAWC,QAAS1B,IAC3E,mBAAGa,UAAU,yBAAyBY,MAAM,cAAcC,QAAS1B,OAI/E,qBAAKa,UAAU,YAAf,SAEInB,EAAMO,KAAI,SAACC,GACR,OACD,sBAAKW,UAAU,WAAf,UACA,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACG,mBAAGA,UAAU,yBAAyBY,MAAM,YAAYC,QAAS,kBAhD7D,SAACvB,GACd,IAAIwB,EAAcjC,EAAMkC,MAAK,SAAC1B,GAC1B,OAAOA,EAAQC,KAAOA,KAI1BN,GAAgB,GAChBR,EAAasC,EAAYvB,MACzBL,EAAcI,GAwCkE0B,CAAS3B,EAAQC,OACxF,mBAAGU,UAAU,8BAA8BY,MAAM,aAAaC,QAAS,kBAnE7D,SAACI,GACjB,IAAMC,EAAerC,EAAMsC,QAAO,SAAC9B,GAC/B,OAAO4B,IAAU5B,EAAQC,MAG7BR,EAASoC,GA8D0EE,CAAW/B,EAAQC,YAJpED,EAAQC,iBCvGlC+B,MAVf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACG,cAAC,EAAD,SCDTsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ee2b6644.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/to-do-list.8c238d01.png\";","import React, { useState ,useEffect} from 'react';\r\nimport logo from './to-do-list.png';\r\n\r\n//to get data from localStorage\r\n\r\nconst getLocalItems = () =>{\r\n    let list = localStorage.getItem('TodoList');\r\n    \r\n\r\n    if(list){\r\n        return JSON.parse(localStorage.getItem('TodoList'));\r\n    }else{\r\n        return [];\r\n    }\r\n};\r\n\r\nconst Todo = () =>{\r\n    const [inputData,setInputdata] = useState('');\r\n    const [items, setItems] = useState(getLocalItems());\r\n    const [toggleButton, setToggleButton] = useState(true);\r\n    const [isEditItem,setIsEditItem] = useState(null);\r\n\r\n    const inputChangeHandler = (event) =>{\r\n          setInputdata(event.target.value);\r\n    };\r\n//add item onClick method\r\n    const addItem = () =>{\r\n        if(!inputData){\r\n          alert('please fill data');\r\n\r\n        }\r\n        else if(inputData && !toggleButton){\r\n             setItems(\r\n                 items.map((element) =>{\r\n                     if(element.id === isEditItem){\r\n                         return{...element, name:inputData}\r\n                     }\r\n                     return element;\r\n                 })\r\n                 \r\n                 )\r\n                 setToggleButton(true);\r\n                 setInputdata('');\r\n                 setIsEditItem(null);\r\n        }\r\n        else{\r\n            const allInputData = {id: new Date().getTime().toString(), name:inputData}\r\n            setItems([...items, allInputData]);\r\n            setInputdata('');\r\n        \r\n        } \r\n    };\r\n//delete item\r\n    const deleteItem = (index) =>{\r\n       const updateditems = items.filter((element) =>{\r\n           return index !== element.id;\r\n       });\r\n\r\n       setItems(updateditems);\r\n    };\r\n\r\n//add item on Enter press\r\n\r\n    const inputSubmitHandler = (event) =>{\r\n        if(event.key === 'Enter'){\r\n            addItem();\r\n        }\r\n    };\r\n\r\n//--------------------------------------------- Edit item --------------------------------------//\r\n\r\nconst editItem = (id) =>{\r\n    let newEditItem = items.find((element) =>{\r\n        return element.id === id;\r\n       \r\n    });\r\n   \r\n    setToggleButton(false);\r\n    setInputdata(newEditItem.name);\r\n    setIsEditItem(id);\r\n};\r\n\r\n\r\n//add data on local storage\r\n    useEffect(() =>{\r\n     localStorage.setItem('TodoList',JSON.stringify(items))\r\n    },[items]);\r\n\r\n\r\n   return(\r\n     <>\r\n       <div className=\"main-div\">\r\n         <div className=\"child-div\">\r\n            <figure>\r\n              <img src={logo} alt=\"todo logo\" />\r\n                 <figcaption>Add your list here</figcaption>\r\n            </figure>\r\n            <div className=\"addItems\">\r\n                <input \r\n                 type=\"text\"\r\n                 placeholder=\"Add Items\" \r\n                 name=\"listItem\" \r\n                 value={inputData}\r\n                 onChange={inputChangeHandler}\r\n                 onKeyPress={inputSubmitHandler}\r\n               />\r\n               {\r\n                toggleButton ? <i className=\"fa fa-plus add-btn\" title=\"Add-item\" onClick={addItem}></i> :\r\n                <i className=\"fas fa-edit delete-btn\" title=\"Update Item\" onClick={addItem}></i>\r\n               } \r\n            </div>\r\n\r\n    <div className=\"showItems\">\r\n      {\r\n        items.map((element) => {\r\n           return(\r\n          <div className=\"eachItem\" key={element.id}>\r\n          <h3>{element.name}</h3>\r\n          <div className=\"todo-btn\">\r\n             <i className=\"fas fa-edit delete-btn\" title=\"Edit Item\" onClick={() => editItem(element.id)}></i>\r\n             <i className=\"fas fa-trash-alt delete-btn\" title=\"Delet Item\" onClick={() => deleteItem(element.id)}></i>\r\n         </div>\r\n                                \r\n        </div>\r\n        )\r\n       })\r\n        }\r\n                \r\n                </div>\r\n\r\n             </div>\r\n         </div>\r\n     </>\r\n   );\r\n};\r\n\r\nexport default Todo;","import './App.css';\nimport Todo from './components/Todo';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n         <Todo/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}